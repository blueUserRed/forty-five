import "imports/colors.onj" as color;
import "screens/input_maps.onj" as inputMaps;
import "config/graphics_config.onj" as graphicsConfig;
import "screens/shared_components.onj" as sharedComponents;

use Common;
use Screen;
use Style;


var worldWidth = 1600.0;
var worldHeight = 900.0;

assets: {
    useAssets: [
        "title_screen_background", "key_select_frame", "white_texture", "black_texture", "enemy_texture", "red_wing",
        "normal_bullet", "grey_texture", "heart_texture", "burning_icon", "white_rounded", "reserves_texture",
        "black_texture", "world_view_background", "map_background_snow_tileable", "map_detail_background",
        "map_detail_fight_button_hover", "map_detail_fight_button", "map_background_grass_tileable",
        "map_background_wasteland_tileable","map_background_bewitched_forest_tileable",
        "location_sign_salem", "transparent_black_texture",
        "map_decoration_wasteland_cactus_1", "map_decoration_wasteland_cactus_2", "map_decoration_grass", "map_path", "dialog_continue_arrow",
        "map_player", "location_sign_aqua_dulche", "location_sign_salem",
        "map_node_default",
        "map_node_shop_rect", "map_node_shop_circle",
        "map_node_fight_rect", "map_node_fight_circle",
        "map_node_exit_rect", "map_node_exit_circle",
        "card_character",
        "map_decoration_wasteland_dune_1", "map_decoration_wasteland_dune_2",
        "map_decoration_wasteland_dune_3", "map_decoration_wasteland_dune_4",
        "map_decoration_wasteland_skull_1", "map_decoration_wasteland_skull_2",

        "map_decoration_bewitched_forest_sheep_1","map_decoration_bewitched_forest_sheep_2",
        "map_decoration_bewitched_forest_tree1",

        "map_edge_shader", "bewitched_fog_static_noise_shader", "bewitched_fog_dynamic_noise_shader",
        "prerendered_noise_perlin_512x512",

        ...(sharedComponents.backpackAssets),
        ...(sharedComponents.navBarUsedAssets),
        ...(sharedComponents.warningLabelUsedAssets),
    ]
},

viewport: $FitViewport {
    worldWidth: worldWidth,
    worldHeight: worldHeight
},

options: {
    transitionAwayTime: 1.0,
    background: "title_screen_background",
    screenController: $MapScreenController {},
    inputMap: [
        ...(inputMaps.defaultInputMap),
        ...(inputMaps.detailMapInputMap),
    ]
},

var worldView = $WorldView {
    styles: [
        {
            style_priority: 1,
            width: 100.0#percent,
            height: 100.0#percent,
        },
    ],
    behaviours: [
        $OnClickChangeScreenStateBehaviour {
            state: "show_world_view",
            enter: false
        }
    ]
};


var mapBox = $Box {
    styles: [
        {
            height: 100.0#percent,
            flexDirection: flexDirection.row,
            alignItems: align.center,
            justifyContent: justify.flexEnd
        }
    ],
    zIndex: 0
} children [

    $Map {
        styles: [
            {
                style_priority: 1,
                width: 100.0#percent,
                height: 100.0#percent,
                positionType: positionType.absolute,
                positionRight: 0#points,
                positionTop: 0#points,
                positionBottom: 0#points,
                backgroundScale: 0.5,
                background: "map_background_wasteland_tileable",
            },
            {
                style_priority: 2,
                style_condition: biome("snow"),
                backgroundScale: 2.5,
                background: "map_background_snow_tileable",
                // i hope its okay to abuse this, if not, then please say
            },
            {
                style_priority: 2,
                style_condition: biome("dunkelwald"),
                backgroundScale: 0.5,
                background: "map_background_grass_tileable",
            },
            {
                style_priority: 2,
                style_condition: biome("bewitched_forest"),
                backgroundScale: 0.5,
                background: "map_background_bewitched_forest_tileable",
            }
        ],
        detailMapProvider: $CurrentMapProvider {
        },
        nodeSize: 60.0,
        lineWidth: 20.0,
        mapScale: 10.0,
        name: "map",
        defaultNodeTexture: "map_node_default",
        playerTexture: "map_player",
        playerWidth: 1.83 * 3.0 * 10.0,
        playerHeight: 3.0 * 3.0 * 10.0,
        edgeTexture: "map_path",
        playerMovementTime: 0.3,
        directionIndicator: "dialog_continue_arrow",
        screenSpeed: 25.0,
        leftScreenSideDeadSection: 100.0,
        disabledDirectionIndicatorAlpha: 0.5,
        startButtonName: "start_button"
    },

    $Box {
        styles: [
            {
                style_priority: 1,
                alignItems: align.center,
                justifyContent: justify.spaceAround,
                height: 90.0#percent,
                width: 30.0#percent,
                positionLeft: 100.0#percent,
                paddingLeft: (13.0 * 10)#points,
                background: "map_detail_background"
            },
            {
                style_priority: 2,
                style_animation: {
                    duration: 0.2,
                    interpolation: interpolation.linear
                },
                positionLeft: (25.0 * 10)#points,
            },
            {
                style_priority: 3,
                style_condition: state("displayEventDetail") and not(state("transition away")),
                style_animation: {
                    duration: 0.2,
                    interpolation: interpolation.linear
                },
                positionLeft: (0.0 * 10)#points,
            },
        ],
    } children [

        $TemplateLabel {
            font: "red_wing",
            template: "{map.curEvent.displayName}",
            fontScale: 1.1,
            color: color.white,
        },

        $TemplateLabel {
            font: "red_wing",
            template: "{map.curEvent.description}",
            fontScale: 0.7,
            color: color.white,
            wrap: true,

            styles: [
                {
                    width: 90#percent,
                }
            ]
        },

        $Image {
            styles: [
                {
                    style_priority: 1,
                    background: "map_detail_fight_button",
                    disabled: false,
                    alpha: 1.0,
                },
                {
                    style_priority: 2,
                    background: "map_detail_fight_button_hover",
                    style_condition: hover() and state("canStartEvent")
                },
                {
                    style_priority: 3,
                    style_condition: not(state("canStartEvent")),
                    alpha: 0.5,
                    disabled: true
                }
            ],
            name: "start_button",
            reportDimensionsWithScaling: true,
            scaleX: 0.6,
            scaleY: 0.6,
        }

    ]

];


root: $Box {
    styles: [
        {
            style_priority: 1,
            positionType: positionType.absolute,
            width: worldWidth#points,
            height: worldHeight#points,
            //            width: 100.0#percent,
//            height: 100.0#percent,

            flexDirection: flexDirection.column,
            justifyContent: justify.center
        }
    ],
} children [

    $Box {
        styles: [
            {
                style_priority: 1,
                positionType: positionType.absolute,
                detached: true,
                width: 100.0#percent,
                height: 100.0#percent,
            },
            {
                style_priority: 2,
                detached: false,
                style_condition: state("show_world_view")
            }
        ],
        zIndex: 2,
    } children [
        worldView,
    ],

    $Box {
        styles: [
            {
                style_priority: 1,
                positionType: positionType.absolute,
                background: "transparent_black_texture",
                alignItems: align.center,
                justifyContent: justify.center,
                detached: true,
                width: 100.0#percent,
                height: 100.0#percent,
            },
            {
                style_priority: 2,
                detached: false,
                style_condition: state("show_extraction_popup")
            }
        ],
        touchable: "enabled",
        zIndex: 3,
    } children [

        $Label {
            font: "red_wing",
            text: "Cards extracted!",
            fontScale: 0.9,
            color: color.white,
        },

        $Label {
            font: "red_wing",
            text: "Ok",
            fontScale: 0.9,
            color: color.white,
            behaviours: [
                $CatchEventAndEmitBehaviour {
                    catch: "ButtonClickEvent",
                    emit: "PopupConfirmationEvent"
                }
            ]
        },
    ],

    $Box {
        styles: [
            {
                style_priority: 1,
                positionType: positionType.absolute,
                width: worldWidth#points,
                height: worldHeight#points,
                detached: false
            },
            {
                style_priority: 2,
                style_condition: state("show_world_view")
            }
        ],
        zIndex: 1,
    } children [
        mapBox,
        $Statusbar {
            options: [
                {
                    actorName: "backpackActor",
                    displayName: "Notebook",
                },
                {
                    actorName: "backpackActor",
                    displayName: "Backpack",
                },
                {
                    actorName: "backpackActor",
                    displayName: "Settings",
                },
            ],
            //            ...(sharedComponents.statusbarLeftDefaults) //Hint to use on left side: use this command instead of next, and comment 2/3 actors in the options out

            ...(sharedComponents.statusbarCenterDefaults)
        },
        sharedComponents.backpack,
    ],
    sharedComponents.warningParent,
],

templates: [
    ...(sharedComponents.statusBarTemplates),
    ...(sharedComponents.backpackTemplates),
    ...(sharedComponents.warningLabelTemplates),
],