import "imports/colors.onj" as color;
import "screens/input_maps.onj" as inputMaps;
import "config/graphics_config.onj" as graphicsConfig;
import "screens/shared_components.onj" as sharedComponents;

use Common;
use Screen;
use Style;

var worldWidth = 1600.0;
var worldHeight = 900.0;

viewport: $FitViewport {
    worldWidth: worldWidth,
    worldHeight: worldHeight
},

options: {
    transitionAwayTimes: [
        {
            screen: "mapScreen",
            time: 0.0
        },
        {
            screen: "*",
            time: 1.0
        },
    ],
    background: "black_texture",
    music: "map_theme",
    playAmbientSounds: true,
    screenControllers: [$MapScreenController { }],
    inputMap: [
        ...(inputMaps.defaultInputMap),
        ...(inputMaps.detailMapInputMap),
    ]
},

var encounterModifierDisplayTemplate = $Box {
    template_name: "encounter_modifier_display",
    template_keys: {
        "children.0.styles.0.background": "symbol",
        "children.1.children.0.text": "modifierName",
        "children.1.children.1.text": "modifierDescription",
    },
    styles: [
        {
            flexDirection: flexDirection.row,
//            width: 90#percent,
            width: 230#points,
            marginLeft: 20#points
        }
    ],
} children [
    $Box {
        styles: [
            {
                background: "encounter_modifier_frost",
                aspectRatio: 1.0,
                marginTop: 20#points,
                width: 30#points,
            }
        ],
    },

    $Box {
        styles: [
            {
                flexDirection: flexDirection.column,
                alignItems: align.flexStart,
                marginLeft: 10#points,
            }
        ]
    } children [
        $Label {
            font: "red_wing",
            text: "Frost",
            fontScale: 0.6,
            align: "left",
            color: color.red
        },
        $Label {
            styles: [
                {
                    width: 230#points
                }
            ],
            font: "roadgeek",
            text: "Some long description text Lorem Ipsum Lorem Ipsum Lorem Ipsum",
            wrap: true,
            fontScale: 0.5,
            align: "left",
            color: color.black,
        }
    ]

];

var infoPopup = $Box {
    styles: [
        {
            style_priority: 1,
            alignItems: align.center,
            justifyContent: justify.spaceBetween,
            height: 90.0#percent,
            width: 26.0#percent,
            // positionLeft: 100.0#percent,
            paddingTop: 60#points,
            paddingBottom: 60#points,
            //paddingLeft: 0.0#points,
            background: "map_detail_background"
        },
        {
            style_priority: 2,
            style_animation: {
                duration: 0.2,
                interpolation: interpolation.pow2In
            },
            positionLeft: 360#points,
        },
        {
            style_priority: 3,
            style_condition: state("displayEventDetail") and not(state("transition away")),
            style_animation: {
                duration: 0.2,
                interpolation: interpolation.pow2In
            },
            positionLeft: 40#points,
        },
    ],
} children [

    $Box {
        styles: [
            {
                width: 100#percent,
                alignItems: align.center,
            }
        ]
    } children [

        $TemplateLabel {
            styles: [
                {
                    width: 80#percent
                }
            ],
            font: "red_wing",
            template: "{map.cur_event.displayName}",
            fontScale: 1.1,
            wrap: true,
            align: "center",
            color: color.white,
        },

        $TemplateLabel {
            font: "roadgeek",
            template: "{map.cur_event.description}",
            fontScale: 0.7,
            color: color.white,
            wrap: true,
            align: "center",
            styles: [
                {
                    width: 75#percent,
                }
            ]
        },

        $Box {
            name: "encounter_modifier_parent",
            styles: [
                {
                    style_priority: 1,
                    background: "map_detail_encounter_modifier_background",
                    width: 320#points,
                    height: 340#points,
                    flexDirection: flexDirection.column,
                    justifyContent: justify.center,
                    detached: false,
                },
                {
                    style_priority: 2,
                    style_condition: state("noEncounterModifier"),
                    detached: true,
                }
            ],
        } children [

        ],
    ],

    $Box {
        name: "drop_shadow_testing_name",
        styles: [
            {
                style_priority: 1,
                disabled: false,
                alignItems: align.center,
                justifyContent: justify.center,
                height: 80#points,
                width: 180#points,
                background: "map_detail_encounter_button"
            },
            {
                style_priority: 2,
                style_condition: hover() and state("canStartEvent"),
                background: "map_detail_encounter_button_hover"
            },
            {
                style_priority: 3,
                style_condition: not(state("canStartEvent")),
                disabled: true,
                background: "map_detail_encounter_button_disabled"
            }
        ],
        behaviours: [
            sharedComponents.buttonSoundBehaviour,
            sharedComponents.buttonCursorBehaviour,
        ]
    } children [

        $TemplateLabel {
            font: "red_wing",
            name: "start_button",
            template: "{map.cur_event.buttonText}",
            fontScale: 1.0,
            color: color.white,
            align: "center",
            styles: [
                {
                    style_priority: 1,
                    fontColor: color.red,
                    width: 140#points,
                },
                {
                    style_priority: 2,
                    fontColor: color.white,
                    style_condition: parent(hover()) or not(state("canStartEvent")),
                },
            ]
        }

    ]

];

var mapBox = $Box {
    styles: [
        {
            height: 100.0#percent,
            flexDirection: flexDirection.row,
            alignItems: align.center,
            justifyContent: justify.flexEnd
        }
    ],
    zIndex: 0
} children [

    $Map {
        styles: [
            {
                style_priority: 1,
                width: 100.0#percent,
                height: 100.0#percent,
                positionType: positionType.absolute,
                positionRight: 0#points,
                positionTop: 0#points,
                positionBottom: 0#points,
                backgroundScale: 0.8,
                background: "map_background_wasteland_tileable",
            },
            {
                style_priority: 2,
                style_condition: biome("bewitched_forest"),
                backgroundScale: 0.5,
                background: "map_background_bewitched_forest_tileable",
            },
            {
                style_priority: 2,
                style_condition: biome("magenta_mountains"),
                backgroundScale: 0.5,
                background: "map_background_magenta_mountains_tileable",
            },
        ],
        detailMapProvider: $CurrentMapProvider {
        },
        nodeSize: 60.0,
        lineWidth: 10.0,
        mapScale: 10.0,
        name: "map",
        defaultNodeTexture: "map_node_default",
        playerTexture: "map_player",
        playerWidth: 170.0,
        playerHeight: 170.0,
        playerHeightOffset: 50.0,
        edgeTexture: "map_path",
        playerMovementTime: 0.3,
        scrollMargin: 0.0,
        directionIndicator: "common_symbol_arrow",
        encounterModifierDisplayTemplateName: "encounter_modifier_display",
        encounterModifierParentName: "encounter_modifier_parent",
        screenSpeed: 25.0,
        disabledDirectionIndicatorAlpha: 0.5,
        startButtonName: "start_button"
    },

    infoPopup,

];

root: $Box {
    styles: [
        {
            style_priority: 1,
            positionType: positionType.absolute,
            width: worldWidth#points,
            height: worldHeight#points,
            //            width: 100.0#percent,
//            height: 100.0#percent,

            flexDirection: flexDirection.column,
            justifyContent: justify.center
        }
    ],
} children [

    sharedComponents.tutorialInfoActor,

    $Box {
        styles: [
            {
                style_priority: 1,
                positionType: positionType.absolute,
                detached: true,
                width: 100.0#percent,
                height: 100.0#percent,
            },
            {
                style_priority: 2,
                detached: false,
                style_condition: state("show_world_view")
            }
        ],
        zIndex: 2,
    } children [
    ],

    $Box {
        styles: [
            {
                style_priority: 1,
                positionType: positionType.absolute,
                width: worldWidth#points,
                height: worldHeight#points,
                detached: false
            },
            {
                style_priority: 2,
                style_condition: state("show_world_view")
            }
        ],
        zIndex: 1,
    } children [
        mapBox,
        $Statusbar {
            options: [
                {
                    actorName: "backpackActor",
                    displayName: "Backpack",
                },
                {
                    actionName: "toTitleScreen",
                    displayName: "To Title Screen",
                },
                {
                    actorName: "settings_widget",
                    displayName: "Settings"
                }
            ],
            //            ...(sharedComponents.statusbarLeftDefaults) //Hint to use on left side: use this command instead of next, and comment 2/3 actors in the options out

            ...(sharedComponents.statusbarCenterDefaults)
        },
        sharedComponents.backpack,
        ...(sharedComponents.settingsWidgets),
    ],
    sharedComponents.warningParent,
],

templates: [
    ...(sharedComponents.statusBarTemplates),
    ...(sharedComponents.backpackTemplates),
    ...(sharedComponents.warningLabelTemplates),
    encounterModifierDisplayTemplate,

    $None {
        template_name: "cardTemplate",
        template_keys: {
        },
        styles: [
            {
                width: 21.65#percent,
                height: 35.0#percent,
                marginLeft: 10#points,
                marginTop: 10#points,
            },
        ]
    }

],