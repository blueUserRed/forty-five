
import "imports/colors.onj" as color

!worldWidth = 160.0
!worldHeight = 90.0

!cardZIndicesStart = 100
!cardZIndicesEnd = <!cardZIndicesStart + 100>
!overlayZIndex = 500

!buttonHoverBehaviour = $MouseHoverBehaviour {
    useSystemCursor: true
    cursorName: "hand"
    disabled: {
        useSystemCursor: true
        cursorName: "not allowed"
    }
}

viewport: $FitViewport {
    worldWidth: !worldWidth
    worldHeight: !worldHeight
    backgroundTexture: "background2"
}

assets: {
    fonts: [

        $DistanceFieldFont {
            name: "distance_field"
            fontFile: "fonts/distanceField.fnt"
            imageFile: "fonts/distanceField.png"
        }

    ]
    textures: []
    textureAtlases: [

        {
            file: "textures/packed/game_screen/game_screen.atlas"
            defines: [ "background", "background2" "revolver_slot", "enemy" ]
        }

    ]
    cursors: [
        {
            name: "cursor"
            file: "textures/cursors/revolver.png"
            hotspotX: 0
            hotspotY: 0
        }
    ]
    postProcessors: []
    animations: []
    colorTextures: [

        {
            name: "card_detail_background"
            color: "04040488"
        }
        {
            name: "black"
            color: !color.black
        }

    ]
}

options: {
    setFillParentOnRoot: true
    defaultCursor: {
//        useSystemCursor: true
//        cursorName: "arrow"
        useSystemCursor: false
        cursorName: "cursor"
    }
    postProcessor: null
    controller: $GameScreenController {
        cardsFile: "cards/cards.onj"
        cardAtlasFile: "cards/generated/cards.atlas"
        cardHand: {
            actorName: "card_hand"
        }
        revolver: {
            actorName: "revolver"
            dropBehaviour: $RevolverDropTarget {
                group: "card"
            }
        }
        enemyArea: {
            actorName: "enemy_area"
            enemies: [ "enemy" ]
        }
        cardDragBehaviour: $CardDragSource {
            group: "card"
        }
        enemies: [
            {
                name: "enemy"
                lives: 1234
                texture: "enemy"
                offsetX: 60.0
                offsetY: 40.0
                scaleX: 0.03
                scaleY: 0.03
                detailFont: "distance_field"
                detailFontScale: 2.0
                detailFontColor: !color.blue
            }
        ]
        cardDrawActor: "card_draw_table"
        shootButtonName: "shoot_button"
    }
}

!slotScale = 0.07
!revolverWidth = <128.0 * !slotScale * 4.0>

!revolver = $Revolver {
    name: "revolver"
    slotTexture: "revolver_slot"
    font: "distance_field"
    fontColor: !color.white
    fontScale: 0.25
    slotScale: !slotScale
    cardScale: 0.045
}

!cardHand = $CardHand {
    name: "card_hand"
    cardScale: 0.07
    cardSpacing: 1.0
    startCardZIndicesAt: !cardZIndicesStart
    hoveredCardZIndex: <!cardZIndicesEnd - 1>
    draggedCardZIndex: !cardZIndicesEnd
    detailFont: "distance_field"
    detailFontColor: !color.white
    detailBackgroundTexture: "card_detail_background"
    detailFontScale: 0.1
    detailOffsetX: 0.0
    detailOffsetY: 1.0
    detailPadding: 1.0
//  debug: true
}

!enemyArea = $EnemyArea {
     name: "enemy_area"
//     debug: true
 }

!topRow = {
    cells: [

        {
            element: $Table {
                align: "bottom"
                rows: [

                    {
                        cells: [
                            {
                                sizeToActor: true
                                padRight: 34.0
                                element: !revolver
                            }
                        ]
                    }

                    {
                        cells: [
                            {
                                sizeToActor: true
                                element: $Label {
                                    name: "shoot_button"
                                    font: "distance_field"
                                    text: "shoot"
                                    fontScale: 0.15
                                    color: !color.white
                                    backgroundTexture: "black"
                                    behaviours: [ $ShootButtonBehaviour { }, !buttonHoverBehaviour ]
                                }
                            }
                        ]
                    }

                ]

            }
        }

        {
            width: <!worldWidth - !revolverWidth - 20.0>
            height: 60.0
            element: !enemyArea
        }

    ]
}

!bottomRow = {
    cells: [

        {
            sizeToActor: true
            padBottom: 2.0
            align: "bottom"
            colspan: 2
            element: !cardHand
        }

    ]
}

!cardDrawTable = $Table {
    visible: false
    name: "card_draw_table"
    debug: true
    fillX: true
    fillY: true
    zIndex: !overlayZIndex
    backgroundTexture: "card_detail_background"
    rows: [


        {
            cells: [

                {
                    element: $Label {
                        font: "distance_field"
                        text: "stack 1"
                        fontScale: 0.15
                        align: "center"
                        color: !color.white
                    }
                }

                {
                    element: $Label {
                        font: "distance_field"
                        text: "stack 2"
                        fontScale: 0.15
                        align: "center"
                        color: !color.white
                    }
                }
                {
                    element: $Label {
                        font: "distance_field"
                        text: "stack 3"
                        fontScale: 0.15
                        align: "center"
                        color: !color.white
                    }
                }

            ]
        }

    ]
}

children: [


    $Table {
        fillX: true
        fillY: true
//        debug: true
        rows: [ !topRow, !bottomRow ]
    }

    !cardDrawTable

]
